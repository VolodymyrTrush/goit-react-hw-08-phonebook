{"version":3,"file":"static/js/318.80bc2625.chunk.js","mappings":"gNAGaA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,+I,oECDRE,E,QAAYF,GAAAA,EAAH,mFAGX,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,U,oECHlBC,E,QAAQP,GAAAA,MAAH,iOAOI,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,U,oECP7BE,E,QAAYR,GAAAA,GAAH,gHAEL,SAAAG,GAAC,OAAIA,EAAEC,MAAMK,WAAWC,S,kECF5BC,E,QAAgBX,GAAAA,OAAH,2ZAKH,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,SAEhC,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,U,mECPlBM,EAAW,WACtB,IAAMC,GAAcC,EAAAA,EAAAA,MAGpB,MAAO,EAFUC,EAAAA,EAAAA,MAECF,K,0LCIPG,EAAY,WACvB,OAAmBJ,EAAAA,EAAAA,KAAZK,GAAP,eAWA,OACE,SAAC,KAAD,CACEC,cAAe,CAAEC,MAAO,GAAIC,SAAU,IACtCC,SAZkB,SAACC,GACrB,IAAMC,EAAO,CACXJ,MAAOG,EAAOH,MACdC,SAAUE,EAAOF,UAEnBH,GAASO,EAAAA,EAAAA,IAAUD,IAClB,MAOCE,iBAAkBC,EAAAA,GAHpB,SAKG,SAAAC,GAAK,OACJ,UAAC,IAAD,YACE,SAAC,EAAAC,EAAD,CACEC,KAAK,OACLC,KAAK,QACLC,YAAY,QACZC,SAAUL,EAAMM,aAChBC,MAAOP,EAAML,OAAOH,SACtB,SAAC,KAAD,CAAcW,KAAK,QAAQK,OAAQ,SAAAC,GAAG,OAAI,SAAC,IAAD,UAAYA,QACtD,SAAC,EAAAR,EAAD,CACEC,KAAK,WACLC,KAAK,WACLC,YAAY,WACZC,SAAUL,EAAMM,aAChBC,MAAOP,EAAML,OAAOF,YACtB,SAAC,KAAD,CAAcU,KAAK,WAAWK,OAAQ,SAAAC,GAAG,OAAI,SAAC,IAAD,UAAYA,QACzD,SAAC,IAAD,CAAeP,KAAK,SAApB,2BChCV,EATc,WACZ,OACE,iCACE,SAAC,IAAD,0DACA,SAACb,EAAD,S,oHCLAqB,EAAaC,OACjB,0HAGIC,EAAeD,OAAO,SAEfE,EAAgBC,EAAAA,KAAaC,MAAM,CAC9CZ,KAAMW,EAAAA,KAAaE,QAAQN,GAAYO,IAAI,GAAGC,WAC9CC,OAAQL,EAAAA,KAAaE,QAAQJ,GAAcM,aAGhCE,EAAiBN,EAAAA,KAAaC,MAAM,CAC/CZ,KAAMW,EAAAA,KAAaE,QAAQN,GAAYO,IAAI,GAAGC,WAC9C1B,MAAOsB,EAAAA,KAAatB,QAAQ0B,WAC5BzB,SAAUqB,EAAAA,KAAaG,IAAI,GAAGC,aAGnBnB,EAAYe,EAAAA,KAAaC,MAAM,CAC1CvB,MAAOsB,EAAAA,KAAatB,QAAQ0B,WAC5BzB,SAAUqB,EAAAA,KAAaG,IAAI,GAAGC","sources":["components/auth/common/AuthForm.styled.js","components/common/ErrorText.styled.js","components/common/Input.styled..js","components/common/MainTitle.styled.js","components/common/PrimaryButton.styled.js","hooks/useRedux.js","components/auth/LoginForm/LoginForm.jsx","pages/Login/Login.jsx","scheme/scheme.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Form } from \"formik\";\n\nexport const AuthForm = styled(Form)`\n  max-width: 500px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;","import styled from \"styled-components\";\n\nexport const ErrorText = styled.p`\n  margin-bottom: 10px;\n  font-size: 16px;\n  color: ${p => p.theme.colors.white};\n`;","import styled from \"styled-components\";\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  height: 40px;\n  margin: 0 0 10px 0;\n  padding: 8px;\n  font-size: 14px;\n  background-color: ${p => p.theme.colors.white};\n  outline: none;\n  border: 2px solid;\n  border-radius: 5px;\n`;","import styled from \"styled-components\";\n\nexport const MainTitle = styled.h1`\n  margin-bottom: 20px;\n  font-weight: ${p => p.theme.fontWeight.bold};\n  text-align: center;\n  font-size: 20px;\n`;","import styled from \"styled-components\";\n\nexport const PrimaryButton = styled.button`\n  display: block;\n  padding: 5px 20px;\n  border: none;\n  border-radius: 2px;\n  outline: 1px solid ${p => p.theme.colors.white};\n  background-color: transparent;\n  color: ${p => p.theme.colors.white};\n  cursor: pointer;\n  transition: all 250ms ease-in-out;\n\n  @media screen and (max-width: 425px) {\n    padding: 3px 10px;\n    font-size: 9px;\n  }\n\n  &:hover {\n    box-shadow: 5px 5px 18px -3px rgba(255,255,255,0.5);\n  }\n`;","import { createSelectorHook, useDispatch } from \"react-redux\";\n\nexport const useRedux = () => {\n  const useSelector = createSelectorHook();\n  const dispatch = useDispatch()\n\n  return [dispatch, useSelector];\n};","import { Formik, ErrorMessage } from \"formik\";\nimport { loginUser } from \"redux/authSlice\";\nimport { useRedux } from \"hooks/useRedux\";\nimport { Navigate } from \"react-router\";\nimport { logSchema } from \"scheme/scheme\";\nimport { AuthForm } from \"components/auth/common/AuthForm.styled\";\nimport { PrimaryButton } from \"components/common/PrimaryButton.styled\";\nimport { ErrorText } from \"components/common/ErrorText.styled\";\nimport { Input } from \"components/common/Input.styled.\";\n\nexport const LoginForm = () => {\n  const [dispatch] = useRedux();\n\n  const submitHandler = (values) => {\n    const user = {\n      email: values.email,\n      password: values.password,\n    };\n    dispatch(loginUser(user));\n    <Navigate to=\"contacts\" replace={true} />\n  };\n\n  return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      onSubmit={submitHandler}\n      validationSchema={logSchema}\n    >\n      {props => (\n        <AuthForm>\n          <Input\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"email\"\n            onChange={props.handleChange}\n            value={props.values.email} />\n          <ErrorMessage name=\"email\" render={msg => <ErrorText>{msg}</ErrorText>} />\n          <Input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n            onChange={props.handleChange}\n            value={props.values.password} />\n          <ErrorMessage name=\"password\" render={msg => <ErrorText>{msg}</ErrorText>} />\n          <PrimaryButton type=\"submit\">LOG IN</PrimaryButton>\n        </AuthForm>\n      )}\n    </Formik>\n  );\n};","import { MainTitle } from \"components/common/MainTitle.styled\";\nimport { LoginForm } from \"components/auth/LoginForm/LoginForm\";\n\nconst Login = () => {\n  return (\n    <>\n      <MainTitle>If you already have account, please log in</MainTitle>\n      <LoginForm />\n    </>\n  );\n};\n\nexport default Login;","import * as yup from 'yup';\n\nconst nameRegExp = RegExp(\n  /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/\n);\n\nconst numberRegExp = RegExp(/[0-9]/);\n\nexport const contactSchema = yup.object().shape({\n  name: yup.string().matches(nameRegExp).min(2).required(),\n  number: yup.string().matches(numberRegExp).required(),\n});\n\nexport const registerSchema = yup.object().shape({\n  name: yup.string().matches(nameRegExp).min(2).required(),\n  email: yup.string().email().required(),\n  password: yup.string().min(4).required(),\n});\n\nexport const logSchema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().min(4).required(),\n});\n"],"names":["AuthForm","styled","Form","ErrorText","p","theme","colors","white","Input","MainTitle","fontWeight","bold","PrimaryButton","useRedux","useSelector","createSelectorHook","useDispatch","LoginForm","dispatch","initialValues","email","password","onSubmit","values","user","loginUser","validationSchema","logSchema","props","I","type","name","placeholder","onChange","handleChange","value","render","msg","nameRegExp","RegExp","numberRegExp","contactSchema","yup","shape","matches","min","required","number","registerSchema"],"sourceRoot":""}